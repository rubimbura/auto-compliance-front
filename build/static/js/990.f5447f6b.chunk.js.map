{"version":3,"file":"static/js/990.f5447f6b.chunk.js","mappings":"+RA0HA,UAlGc,WAOZ,OAAwBA,EAAAA,EAAAA,UAAS,CAC/BC,SAAU,GACVC,gBAAiB,KACjB,eAHKC,EAAI,KAAEC,EAAO,KASdC,IAJWC,EAAAA,EAAAA,MAGF,IAAIC,gBAAgBC,OAAOC,SAASC,QAC9BC,IAAI,WAEzBC,EAAAA,EAAAA,YAAU,WAGR,GACA,CAACP,IAcH,OACE,gBAAKQ,UAAU,gEAA+D,UAC5E,SAAC,KAAU,WACT,SAAC,KAAI,CAACA,UAAU,yBAAyBC,MAAO,CAACC,aAAc,QAAQ,UACrE,SAAC,KAAI,CAACC,GAAI,EAAE,UACV,SAAC,KAAU,WACT,SAAC,KAAK,CAACH,UAAU,MAAK,UACpB,SAAC,KAAS,WACR,UAAC,KAAK,YACJ,wBAAI,qBACJ,cAAGA,UAAU,uBAAsB,SAAC,wBACpC,UAAC,KAAW,CAACA,UAAU,OAAM,WAC3B,SAAC,KAAe,WACd,SAAC,IAAK,CAACI,KAAMC,EAAAA,OAEf,SAAC,KAAU,CACXC,YAAY,WACZC,KAAK,WACLC,aAAa,WACbC,SAAU,SAACC,GAAC,OAAGnB,GAAQ,kBAClBD,GAAI,IACPF,SAAUsB,EAAEC,OAAOC,QACnB,QAGJ,UAAC,KAAW,CAACZ,UAAU,OAAM,WAC3B,SAAC,KAAe,WACd,SAAC,IAAK,CAACI,KAAMC,EAAAA,OAEf,SAAC,KAAU,CACTE,KAAK,WACLD,YAAY,mBACZE,aAAa,mBACbC,SAAU,SAACC,GAAC,OAAKnB,GAAQ,kBACpBD,GAAI,IACPD,gBAAiBqB,EAAEC,OAAOC,QAC1B,QAGN,gBAAKX,MAAO,CAACY,MAAO,QAAQ,UACxB,SAAC,KAAO,CACNC,QAnDJ,WACG,KAAlBxB,EAAKF,UAAmBE,EAAKD,eAKlC,EA8CwBY,MAAO,CAACY,MAAO,OAAQE,gBAAiB,UAAWC,QAAS,QAAQ,SAAC,aAI3E,gBAAKf,MAAO,CAACY,MAAO,OAAQI,QAAS,OAAQC,eAAgB,UAAU,UACrE,iBAAMC,MAAM,OAAOnB,UAAU,uBAAsB,SAAC,+CAa1E,C","sources":["views/pages/changePassword/index.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport axios from 'axios'\nimport qs from 'qs'\nimport { useNavigate } from 'react-router-dom'\n\n// import {useVerifyLinkMutation, useChangePasswordMutation} from '../../../api'\n\n\n\nconst Login = () => {\n\n  \n    // const [verifyLink, {data: verifyLinkData}] = useVerifyLinkMutation()\n    // const [changePassword, {data, isLoading, isSuccess}] = useChangePasswordMutation()\n\n\n  const [user, setUser] = useState({\n    password: '',\n    confirmPassword: ''\n  })\n\n  const navigate = useNavigate()\n\n\n  const params = new URLSearchParams(window.location.search)\n  const token = params.get('token')\n\n  useEffect(() =>{\n    // if(token){\n    //     verifyLink(token)\n    // }\n  },[token])\n\n\n\n  const handleReset = () => {\n    if(user.password !== '' && user.confirmPassword !== ''){\n        // if(user.password === user.confirmPassword){\n        //     changePassword({password:user.password, token})\n        // }\n    }\n  }\n\n  \n\n  return (\n    <div className=\"min-vh-100 d-flex flex-row align-items-center login-container\">\n      <CContainer>\n        <CRow className=\"justify-content-center\" style={{marginBottom: '60px'}}>\n          <CCol md={5}>\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                    <h1>Change password</h1>\n                    <p className=\"text-medium-emphasis\">Enter new password</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput \n                      placeholder=\"Password\"\n                      type='password' \n                      autoComplete=\"password\"\n                      onChange={(e)=>setUser({\n                        ...user,\n                        password: e.target.value\n                      })} \n                      />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        type=\"password\"\n                        placeholder=\"Confirm password\"\n                        autoComplete=\"current-password\"\n                        onChange={(e) => setUser({\n                          ...user,\n                          confirmPassword: e.target.value\n                        })}\n                      />\n                    </CInputGroup>\n                    <div style={{width: '100%'}}>\n                        <CButton \n                          onClick={handleReset} \n                          style={{width: '100%', backgroundColor: '#015EC6', outline: 'none'}}>\n                          Login\n                        </CButton>\n                    </div>\n                    <div style={{width: '100%', display: 'flex', justifyContent: 'center'}}>\n                      <span color=\"link\" className=\"forgot-password-link\">\n                        Did you forget password?\n                      </span>\n                    </div>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Login\n"],"names":["useState","password","confirmPassword","user","setUser","token","useNavigate","URLSearchParams","window","location","search","get","useEffect","className","style","marginBottom","md","icon","cilLockLocked","placeholder","type","autoComplete","onChange","e","target","value","width","onClick","backgroundColor","outline","display","justifyContent","color"],"sourceRoot":""}