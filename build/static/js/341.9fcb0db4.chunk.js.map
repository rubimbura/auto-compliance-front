{"version":3,"file":"static/js/341.9fcb0db4.chunk.js","mappings":"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","sources":["components/NotificationMessage.js","views/pages/login/Login.js","../node_modules/@coreui/icons/js/free/cil-user.js"],"sourcesContent":["\n\nimport React from 'react'\nimport {\n  CAlert,\n\n} from '@coreui/react'\n\n\nconst NotificationMessage = ({message}) => {\n  return (\n    <CAlert color=\"danger\">{message} </CAlert>\n  )\n}\n\nexport default NotificationMessage","import React, {useState, useEffect} from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport axios from 'axios'\nimport qs from 'qs'\nimport { useNavigate } from 'react-router-dom'\nimport NotificationMessage from 'src/components/NotificationMessage'\n\n\n\n\n\nconst Login = () => {\n\n  const BASE_URL = process.env.REACT_APP_D_KEYCLOACK_URL\n  const CLIENT_ID = process.env.REACT_APP_KEYCLOACK_CLIENT_ID\n  const CLIENT_SECRET_KEY = process.env.REACT_APP_KEYCLOACK_CLIENT_SECRET_KEY\n  const GRANT_TYPE = process.env.REACT_APP_KEYCLOACK_GRANT_TYPE\n  const SCOPE = process.env.REACT_APP_KEYCLOACK_SCOPE\n\n  const [user, setUser] = useState({\n    username: '',\n    password: ''\n  })\n\n  const [userToken, setUserToken] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n\n  const [notificationMessage, \n    setNoticationMessage] = useState('')\n\n\n  const token = localStorage.getItem('token')\n\n  const navigate = useNavigate()\n\n  useEffect(() =>{\n    if(token){\n      navigate('/dashboard')\n    }\n  },[userToken])\n\n\n\n  const handleLogin = () => {\n    if(user.username !== '' && user.password !== ''){\n      const data = {\n        username: user.username,\n        password: user.password,\n        grant_type: GRANT_TYPE,\n        client_id: CLIENT_ID,\n        client_secret: CLIENT_SECRET_KEY,\n        scope: SCOPE\n      }\n      setIsLoading(true)\n\n      axios.post(BASE_URL, qs.stringify(data),\n      {\n        headers: {\n          'content-type': 'application/x-www-form-urlencoded',\n          'Authorization': `Bearer`\n        }\n      }\n      )\n      .then(function (response) {\n\n        localStorage.setItem('token', response.data?.access_token)\n        setUserToken(token)\n        setIsLoading(false)\n\n      })\n      .catch(function (error) {\n        setNoticationMessage(error?.response?.data?.error_description || error?.response?.data?.message)\n        setIsLoading(false)\n      });\n    } \n  }\n\n  \n\n\n\n\n  return (\n    <div className=\"min-vh-100 d-flex flex-row align-items-center login-container\">\n      <CContainer>\n        \n        <CRow className=\"justify-content-center\" style={{marginBottom: '60px'}}>\n          <CCol md={5}>\n\n           {notificationMessage !== '' && <NotificationMessage message={notificationMessage}/>}\n\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                    <h1>Login</h1>\n                    <p className=\"text-medium-emphasis\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <CFormInput \n                      placeholder=\"Username\" \n                      autoComplete=\"username\"\n                      onChange={(e)=>setUser({\n                        ...user,\n                        username: e.target.value\n                      })} \n                      />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        autoComplete=\"current-password\"\n                        onChange={(e) => setUser({\n                          ...user,\n                          password: e.target.value\n                        })}\n                      />\n                    </CInputGroup>\n                    <div style={{width: '100%'}}>\n                        <CButton \n                          disabled={isLoading}\n                          onClick={handleLogin} \n                          style={{width: '100%', backgroundColor: '#015EC6', outline: 'none'}}>\n                          Login\n                        </CButton>\n                    </div>\n                    <div \n                      style={{width: '100%', display: 'flex', justifyContent: 'center'}}\n                      >\n                      <span \n                        style={{ cursor: 'pointer'}}\n                        onClick={()=>navigate('/recover-password')}\n                        color=\"link\" className=\"forgot-password-link\">\n                        Did you forget password?\n                      </span>\n                    </div>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Login\n","export const cilUser = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M411.6,343.656l-72.823-47.334,27.455-50.334A80.23,80.23,0,0,0,376,207.681V128a112,112,0,0,0-224,0v79.681a80.236,80.236,0,0,0,9.768,38.308l27.455,50.333L116.4,343.656A79.725,79.725,0,0,0,80,410.732V496H448V410.732A79.727,79.727,0,0,0,411.6,343.656ZM416,464H112V410.732a47.836,47.836,0,0,1,21.841-40.246l97.66-63.479-41.64-76.341A48.146,48.146,0,0,1,184,207.681V128a80,80,0,0,1,160,0v79.681a48.146,48.146,0,0,1-5.861,22.985L296.5,307.007l97.662,63.479h0A47.836,47.836,0,0,1,416,410.732Z' class='ci-primary'/>\"]"],"names":["message","color","BASE_URL","process","REACT_APP_D_KEYCLOACK_URL","CLIENT_ID","REACT_APP_KEYCLOACK_CLIENT_ID","CLIENT_SECRET_KEY","REACT_APP_KEYCLOACK_CLIENT_SECRET_KEY","GRANT_TYPE","REACT_APP_KEYCLOACK_GRANT_TYPE","SCOPE","REACT_APP_KEYCLOACK_SCOPE","useState","username","password","user","setUser","userToken","setUserToken","isLoading","setIsLoading","notificationMessage","setNoticationMessage","token","localStorage","getItem","navigate","useNavigate","useEffect","className","style","marginBottom","md","icon","cilUser","placeholder","autoComplete","onChange","e","target","value","cilLockLocked","type","width","disabled","onClick","data","grant_type","client_id","client_secret","scope","axios","qs","headers","then","response","setItem","access_token","catch","error","error_description","backgroundColor","outline","display","justifyContent","cursor"],"sourceRoot":""}