{"version":3,"file":"static/js/153.77d274a1.chunk.js","mappings":"+MAuBA,IAhB4B,SAAH,GAAyB,IAApBA,EAAO,EAAPA,QAASC,EAAI,EAAJA,KAWrC,OARAC,EAAAA,EAAAA,YAAU,WACRC,OAAOC,SAAS,CACdC,IAAK,EACLC,SAAU,UAEd,GAAG,KAID,UAAC,KAAM,CAACC,MAAON,EAAMO,MAAO,CAACC,UAAW,SAAUC,OAAQ,OAAQC,QAAS,OAAOC,WAAY,SAAUC,eAAgB,UAAU,UAAEb,EAAQ,MAEhJ,C,+HCrBac,EAAkB,CAAC,QAAQ,8W,iCCuHxC,EA7Fc,WAIZ,OAAwBC,EAAAA,EAAAA,UAAS,CAC/BC,MAAO,KACP,eAFKC,EAAI,KAAEC,EAAO,KAIdC,GAAWC,EAAAA,EAAAA,MAIjB,GAAkCL,EAAAA,EAAAA,UAAS,IAAG,eAE9C,GAFgB,KAAc,MAGJA,EAAAA,EAAAA,UAAS,KAAG,eAD/BM,EAAmB,KACxBC,EAAoB,MAGtBpB,EAAAA,EAAAA,YAAU,WAEE,IAAD,EAANqB,OACDD,EAA0B,QAAN,EAACC,aAAK,aAAL,EAAOA,MAGhC,GAAE,CAACC,UAAWC,UAad,OACE,gBAAKC,UAAU,gEAA+D,UAC5E,SAAC,KAAU,WAET,SAAC,KAAI,CAACA,UAAU,yBAAyBlB,MAAO,CAACmB,aAAc,QAAQ,UACrE,UAAC,KAAI,CAACC,GAAI,EAAE,UAEc,KAAxBP,IAA8B,SAACQ,EAAA,EAAmB,CAAC7B,QAASqB,KAE5D,SAAC,KAAU,WACT,SAAC,KAAK,CAACK,UAAU,MAAK,UACpB,SAAC,KAAS,WACR,UAAC,KAAK,YACJ,wBAAI,oBACJ,cAAGA,UAAU,uBAAsB,SAAC,uCACpC,UAAC,KAAW,CAACA,UAAU,OAAM,WAC3B,SAAC,KAAe,WACd,SAAC,IAAK,CAACI,KAAMhB,OAEf,SAAC,KAAU,CACXiB,YAAY,QACZC,aAAa,QACbC,SAAU,SAACC,GAAC,OAAGhB,GAAQ,kBAClBD,GAAI,IACPD,MAAOkB,EAAEC,OAAOC,QAChB,QAGJ,gBAAK5B,MAAO,CAAC6B,MAAO,QAAQ,UACxB,SAAC,KAAO,CACNC,QAzCI,WAG1B,EAuCsB9B,MAAO,CAAC6B,MAAO,OAAQE,gBAAiB,UAAWC,QAAS,QAAQ,SAAC,yBAI3E,gBACIhC,MAAO,CAAC6B,MAAO,OAAQ1B,QAAS,OAAQE,eAAgB,UAAU,UAEpE,iBACEyB,QAAS,kBAAKnB,EAAS,IAAI,EAC3BX,MAAO,CAACiC,OAAQ,WAChBlC,MAAM,OAAOmB,UAAU,uBAAsB,SAAC,6BAatE,C","sources":["components/NotificationMessage.js","../node_modules/@coreui/icons/js/brand/cib-minutemailer.js","views/pages/resetPassword/index.js"],"sourcesContent":["\n\nimport React, {useEffect} from 'react'\nimport {\n  CAlert,\n} from '@coreui/react'\n\nconst NotificationMessage = ({message, type}) => {\n\n\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    })\n  }, [])\n\n\n  return (\n    <CAlert color={type} style={{textAlign: 'center', height: '10px', display: 'flex',alignItems: 'center', justifyContent: 'center'}}>{message} </CAlert>\n  )\n}\n\nexport default NotificationMessage","export const cibMinutemailer = [\"32 32\",\"<path d='M7.416 3.604l4.605 4.98-3.251 6.395 6.855-1.229 3.12 7.532 13.255-17.38zM6.573 14.385l1.276-1.047-1.647 0.521-0.172-0.24 0.683-0.661-0.891 0.359c-3.407 1.323-5.823 4.62-5.823 8.485 0 2.599 1.093 4.937 2.844 6.593-0.751-1.317-1.183-2.844-1.183-4.475 0-3.817 2.417-7.219 5.755-8.557l0.423-1.020-1 0.437-0.281-0.38zM12.391 11.76l2.131-3.76 12.531-2.932z'/>\"]","import React, {useState, useEffect} from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {  cibMinutemailer } from '@coreui/icons'\n\nimport { useNavigate } from 'react-router-dom'\n// import { useResetMutation } from '../../../api'\nimport NotificationMessage from 'src/components/NotificationMessage'\n\n\n\n\n\n\nconst Login = () => {\n\n\n\n  const [user, setUser] = useState({\n    email: '',\n  })\n\n  const navigate = useNavigate()\n\n  // const [resetPassword, {data, isLoading, isSuccess, isError, error}] = useResetMutation()\n\n  const [userToken, setUserToken] = useState('')\n\n  const [notificationMessage, \n    setNoticationMessage] = useState('')\n\n\n  useEffect(()=>{\n\n    if(error){\n      setNoticationMessage(error?.error)\n    }\n    \n  },[isSuccess, isError])\n\n  const handleResetPassword = () => {\n    // if(user.email !== ''){\n    // resetPassword(user.email)\n    // }\n  }\n\n  \n\n\n\n\n  return (\n    <div className=\"min-vh-100 d-flex flex-row align-items-center login-container\">\n      <CContainer>\n\n        <CRow className=\"justify-content-center\" style={{marginBottom: '60px'}}>\n          <CCol md={5}>\n\n           {notificationMessage !== '' && <NotificationMessage message={notificationMessage}/>}\n\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                    <h1>Reset password</h1>\n                    <p className=\"text-medium-emphasis\">Enter you email to reset password</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cibMinutemailer} />\n                      </CInputGroupText>\n                      <CFormInput \n                      placeholder=\"email\" \n                      autoComplete=\"email\"\n                      onChange={(e)=>setUser({\n                        ...user,\n                        email: e.target.value\n                      })} \n                      />\n                    </CInputGroup>\n                    <div style={{width: '100%'}}>\n                        <CButton \n                          onClick={handleResetPassword} \n                          style={{width: '100%', backgroundColor: '#015EC6', outline: 'none'}}>\n                          Send instructions\n                        </CButton>\n                    </div>\n                    <div\n                        style={{width: '100%', display: 'flex', justifyContent: 'center'}}\n                        >\n                      <span \n                        onClick={()=> navigate('/')} \n                        style={{cursor: 'pointer'}}\n                        color=\"link\" className=\"forgot-password-link\">\n                        Login\n                      </span>\n                    </div>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Login\n"],"names":["message","type","useEffect","window","scrollTo","top","behavior","color","style","textAlign","height","display","alignItems","justifyContent","cibMinutemailer","useState","email","user","setUser","navigate","useNavigate","notificationMessage","setNoticationMessage","error","isSuccess","isError","className","marginBottom","md","NotificationMessage","icon","placeholder","autoComplete","onChange","e","target","value","width","onClick","backgroundColor","outline","cursor"],"sourceRoot":""}