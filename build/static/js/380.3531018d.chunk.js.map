{"version":3,"file":"static/js/380.3531018d.chunk.js","mappings":"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","sources":["layout/routes.js","components/AppBreadcrumb.js","layout/AppContent.js","components/AppFooter.js","components/header/AppHeaderDropdown.js","components/AppHeader.js","components/AppSidebarNav.js","layout/AppSidebar.js","layout/_nav.js","layout/_userNav.js","layout/DefaultLayout.js"],"sourcesContent":["import React from 'react'\n\n\nconst Dashboard = React.lazy(() => import('../views/dashboard/Dashboard'))\nconst Regulations = React.lazy(()=>import('../views/regulations'))\nconst AddRegulationForm = React.lazy(()=>import('../views/regulations/AddRegulationForm'))\nconst ViewRegulationForm = React.lazy(() => import('../views/regulations/ViewRegulation'))\nconst ViewRegulationArticle = React.lazy(() => import('../views/regulations/ViewRegulationArticle'))\nconst Users = React.lazy(() => import('../views/users'))\nconst RolesSettings = React.lazy(() => import('../views/settings/roles'))\nconst PermissionSettings = React.lazy(() => import('../views/settings/permisions'))\nconst Evaluation = React.lazy(() => import('../views/evaluation'))\n\n// user regulations\nconst UserRegulation = React.lazy(() => import('../views/regulations/user/UserRegulation'))\nconst AssesUserRegulation = React.lazy(() => import('../views/regulations/user/UserAssessRegulation'))\n\n\n// governance bodies \nconst GovernanceBodies = React.lazy(() => import('../views/governanceBody'))\n\n// Subsidiaries\nconst Subsidiaries = React.lazy(() => import('../views/subsidiaries'))\n\nconst routes = [\n  { path: '/dashboard', name: 'Dashboard', element: Dashboard },\n  { path: '/regulations', name: 'Regulations', element: Regulations},\n  { path: '/regulations/new-regulation', name: 'Add new regulation form', element: AddRegulationForm},\n  { path: '/regulations/view-regulation', name: 'Regulation Form', element: ViewRegulationForm},\n  { path: '/regulations/view-regulation/article', name: 'Article', element: ViewRegulationArticle},\n  { path: '/user/regulations', name: 'Regulation', element: UserRegulation},\n  { path: '/user/regulations/assesment', name: 'Regulation', element: AssesUserRegulation},\n  { path: '/users', name: 'Users', element: Users},\n  { path: '/Roles', name: 'Roles', element: RolesSettings},\n  { path: '/Permissions', name: 'Permissions', element: PermissionSettings},\n  { path: '/subsidiaries', name: 'Subsidiaries', element: Subsidiaries},\n  { path: '/governance-bodies', name: 'Governance Bodies', element: GovernanceBodies},\n  { path: '/evaluation', name: 'Evaluation', element: Evaluation},\n]\n\nexport default routes\n","import React from 'react'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\n\nimport routes from '../layout/routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n  const navigate = useNavigate()\n  const state = useSelector(state => state.regulation.value)\n\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute ? currentRoute.name : false\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      const routeName = getRouteName(currentPathname, routes)\n      routeName &&\n        breadcrumbs.push({\n          pathname: currentPathname,\n          name: routeName,\n          active: index + 1 === array.length ? true : false,\n        })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  const handleClick = (e, path) => {\n    e.preventDefault() \n    navigate(`${path}`, {state: {details: state}}) \n  }\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2\">\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active ? { active: true } :{ href: '#'})}\n            key={index}\n            onClick={(event)=> handleClick(event, breadcrumb.pathname)}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        )\n      })}\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from './routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n          <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\nimport moment from 'moment/moment'\n\nconst AppFooter = () => {\n\n  const date = new Date().getFullYear()\n\n  return (\n    <CFooter>\n      <div>\n        <span className=\"ms-1\">&copy; {date}</span>\n      </div>\n      <div className=\"ms-auto\">\n        <span className=\"me-1\">Powered by Inc ltd</span>\n\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","import React from 'react'\nimport {\n  CAvatar,\n  CBadge,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from '@coreui/react'\nimport {\n  cilBell,\n  cilCreditCard,\n  cilCommentSquare,\n  cilEnvelopeOpen,\n  cilFile,\n  cilLockLocked,\n  cilSettings,\n  cilTask,\n  cilUser,\n} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\n\nimport { useNavigate } from 'react-router-dom'\n\nimport avatar8 from './../../assets/images/profile-icon.png'\n\nconst AppHeaderDropdown = () => {\n\n\n  const navigate = useNavigate()\n\n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n        <CAvatar src={avatar8} size=\"md\" />\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownHeader className=\"bg-light fw-semibold py-2\">Account</CDropdownHeader>\n        {/* <CDropdownItem href=\"#\">\n          <CIcon icon={cilBell} className=\"me-2\" />\n          Updates\n          <CBadge color=\"info\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem> */}\n        {/* <CDropdownItem href=\"#\">\n          <CIcon icon={cilEnvelopeOpen} className=\"me-2\" />\n          Messages\n          <CBadge color=\"success\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem> */}\n        {/* <CDropdownItem href=\"#\">\n          <CIcon icon={cilTask} className=\"me-2\" />\n          Tasks\n          <CBadge color=\"danger\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem> */}\n        {/* <CDropdownItem href=\"#\">\n          <CIcon icon={cilCommentSquare} className=\"me-2\" />\n          Comments\n          <CBadge color=\"warning\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem> */}\n        {/* <CDropdownHeader className=\"bg-light fw-semibold py-2\">Settings</CDropdownHeader> */}\n        {/* <CDropdownItem href=\"#\">\n          <CIcon icon={cilUser} className=\"me-2\" />\n          Profile\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilSettings} className=\"me-2\" />\n          Settings\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilCreditCard} className=\"me-2\" />\n          Payments\n          <CBadge color=\"secondary\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>*/}\n        <CDropdownItem onClick={()=>navigate('/my-account')} style={{ cursor: 'pointer'}}>\n          <CIcon icon={cilSettings} className=\"me-2\" />\n          My Account\n        </CDropdownItem> \n        <CDropdownDivider />\n        <CDropdownItem\n        style={{ cursor: 'pointer'}}\n         onClick={()=>{\n          sessionStorage.clear(),\n          navigate('/')\n        }}\n        >\n          <CIcon icon={cilLockLocked} className=\"me-2\" />\n          Logout\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n}\n\nexport default AppHeaderDropdown\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilBell, cilEnvelopeOpen, cilList, cilMenu } from '@coreui/icons'\n\nimport { AppBreadcrumb } from './index'\nimport { AppHeaderDropdown } from './header/index'\nimport { logo } from 'src/assets/brand/logo'\n\nconst AppHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n\n\n        <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>\n      <CHeaderDivider />\n      <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport jwtDecode from 'jwt-decode'\nimport { CSidebar,CSidebarNav, CSidebarToggler } from '@coreui/react'\nimport { AppSidebarNav } from '../components/AppSidebarNav'\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\nimport {  CNavItem, CNavTitle, CNavGroup } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilChartPie,\n  cilSpeedometer,\n  cilPuzzle\n} from '@coreui/icons'\n\n\n// sidebar nav config\nimport navigation from './_nav'\nimport userNaviagtion from './_userNav'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  const token = sessionStorage.getItem('token') \n  const decode = token ?  jwtDecode(token) : ''\n\n\n  const userMenu = JSON.parse(sessionStorage.getItem('userMenu')) || []\n\n  const formatUserMenu = userMenu?.map(el => {\n    if(el.children.length <= 0 ){\n      return {\n        component: CNavItem,\n        name: el.label,\n        to:el.url,\n        icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\"/>\n      }\n    }else{\n      return{\n        component: CNavGroup,\n        name: el.label,\n        to:'/base',\n        icon: <CIcon icon={cilPuzzle} customClassName=\"nav-icon\"/>,\n        items: el.children.map(val => ({\n          component: CNavItem,\n          name: val.label,\n          to: val.url,\n        }))\n      }\n    }\n  })\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarNav>\n        <br/>\n        <br/>\n        <SimpleBar>\n          <AppSidebarNav items={formatUserMenu} />\n        </SimpleBar>\n      </CSidebarNav>\n      <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n      />\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilChartPie,\n  cilSpeedometer,\n  cilPuzzle\n} from '@coreui/icons'\nimport {  CNavItem, CNavTitle, CNavGroup } from '@coreui/react'\n\nconst _nav = [\n  {\n    component: CNavTitle,\n    name: '',\n  },\n  {\n    component: CNavItem,\n    name: 'Dashboard',\n    to: '/dashboard',\n    icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n  },\n\n  {\n    component: CNavTitle,\n    name: '',\n  },\n  {\n    component: CNavItem,\n    name: 'Regulations',\n    to: '/regulations',\n    icon: <CIcon icon={cilChartPie} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Users',\n    to: '/users',\n    icon: <CIcon icon={cilChartPie} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavGroup,\n    name: 'Settings',\n    to: '/base',\n    icon: <CIcon icon={cilPuzzle} customClassName=\"nav-icon\" />,\n    items: [\n      {\n        component: CNavItem,\n        name: 'Roles',\n        to: '/roles',\n      },\n      {\n        component: CNavItem,\n        name: 'Permission',\n        to: '/permissions',\n      },\n    ]\n  },\n]\n\nexport default _nav\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilChartPie,\n  cilSpeedometer,\n  cilPuzzle\n} from '@coreui/icons'\nimport {  CNavItem, CNavTitle, CNavGroup } from '@coreui/react'\n\nconst _nav = [\n  {\n    component: CNavTitle,\n    name: '',\n  },\n  {\n    component: CNavItem,\n    name: 'Dashboard',\n    to: '/dashboard',\n    icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n  },\n\n  {\n    component: CNavTitle,\n    name: '',\n  },\n\n  {\n    component: CNavItem,\n    name: 'Regulation',\n    to: '/user/regulations',\n    icon: <CIcon icon={cilPuzzle} customClassName=\"nav-icon\" />,\n  },\n\n  {\n    component: CNavGroup,\n    name: 'Base',\n    to: '/base',\n    icon: <CIcon icon={cilPuzzle} customClassName=\"nav-icon\" />,\n    items: [\n      {\n        component: CNavItem,\n        name: 'Accordion',\n        to: '/base/accordion',\n      },\n      {\n        component: CNavItem,\n        name: 'Breadcrumb',\n        to: '/base/breadcrumbs',\n      },\n      {\n        component: CNavItem,\n        name: 'Cards',\n        to: '/base/cards',\n      },\n      {\n        component: CNavItem,\n        name: 'Carousel',\n        to: '/base/carousels',\n      },\n      {\n        component: CNavItem,\n        name: 'Collapse',\n        to: '/base/collapses',\n      },\n      {\n        component: CNavItem,\n        name: 'List group',\n        to: '/base/list-groups',\n      },\n      {\n        component: CNavItem,\n        name: 'Navs & Tabs',\n        to: '/base/navs',\n      },\n      {\n        component: CNavItem,\n        name: 'Pagination',\n        to: '/base/paginations',\n      },\n      {\n        component: CNavItem,\n        name: 'Placeholders',\n        to: '/base/placeholders',\n      },\n      {\n        component: CNavItem,\n        name: 'Popovers',\n        to: '/base/popovers',\n      },\n      {\n        component: CNavItem,\n        name: 'Progress',\n        to: '/base/progress',\n      },\n      {\n        component: CNavItem,\n        name: 'Spinners',\n        to: '/base/spinners',\n      },\n      {\n        component: CNavItem,\n        name: 'Tables',\n        to: '/base/tables',\n      },\n      {\n        component: CNavItem,\n        name: 'Tooltips',\n        to: '/base/tooltips',\n      },\n    ],\n  },\n]\n\nexport default _nav\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = () => {\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent />\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n"],"names":["Dashboard","React","Regulations","AddRegulationForm","ViewRegulationForm","ViewRegulationArticle","Users","RolesSettings","PermissionSettings","Evaluation","UserRegulation","AssesUserRegulation","GovernanceBodies","path","name","element","AppBreadcrumb","currentLocation","useLocation","pathname","navigate","useNavigate","state","useSelector","regulation","value","breadcrumbs","location","split","reduce","prev","curr","index","array","currentPathname","concat","routeName","routes","currentRoute","find","route","getRouteName","push","active","length","getBreadcrumbs","_jsx","CBreadcrumb","className","children","map","breadcrumb","_createElement","CBreadcrumbItem","_objectSpread","href","key","onClick","event","e","preventDefault","details","AppContent","CContainer","lg","Suspense","fallback","CSpinner","color","_jsxs","Routes","idx","Route","exact","Navigate","to","replace","AppFooter","date","Date","getFullYear","CFooter","CDropdown","variant","CDropdownToggle","placement","caret","CAvatar","src","size","CDropdownMenu","CDropdownHeader","CDropdownItem","style","cursor","CIcon","icon","cilSettings","CDropdownDivider","sessionStorage","clear","cilLockLocked","dispatch","useDispatch","sidebarShow","CHeader","position","fluid","CHeaderToggler","type","cilMenu","CHeaderNav","AppHeaderDropdown","CHeaderDivider","AppSidebarNav","_ref","items","navLink","badge","_Fragment","CBadge","text","navItem","item","component","rest","_objectWithoutProperties","_excluded","Component","NavLink","navGroup","_item$items","_excluded2","String","toggler","visible","startsWith","AppSidebar","CNavTitle","CNavItem","cilSpeedometer","cilChartPie","CNavGroup","cilPuzzle","unfoldable","sidebarUnfoldable","token","getItem","userMenu","jwtDecode","JSON","parse","formatUserMenu","el","label","url","customClassName","val","CSidebar","onVisibleChange","CSidebarNav","SimpleBar","CSidebarToggler","AppHeader"],"sourceRoot":""}