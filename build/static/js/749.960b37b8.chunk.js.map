{"version":3,"file":"static/js/749.960b37b8.chunk.js","mappings":"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","sources":["routes.js","components/AppBreadcrumb.js","components/AppContent.js","components/AppFooter.js","components/header/AppHeaderDropdown.js","components/AppHeader.js","components/AppSidebarNav.js","_nav.js","components/AppSidebar.js","layout/DefaultLayout.js"],"sourcesContent":["import React from 'react'\n\n\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'))\nconst Regulations = React.lazy(()=>import('./views/regulations'))\nconst AddRegulationForm = React.lazy(()=>import('./views/regulations/AddRegulationForm'))\nconst ViewRegulationForm = React.lazy(() => import('./views/regulations/ViewRegulation'))\n\n\n\n\nconst routes = [\n  { path: '/dashboard', name: 'Dashboard', element: Dashboard },\n  { path: '/regulations', name: 'Regulations', element: Regulations},\n  { path: '/regulations/new-regulation', name: 'Add new regulation form', element: AddRegulationForm},\n  { path: '/regulations/view-regulation', name: 'Regulation Form', element: ViewRegulationForm},\n\n]\n\nexport default routes\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport routes from '../routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute ? currentRoute.name : false\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      const routeName = getRouteName(currentPathname, routes)\n      routeName &&\n        breadcrumbs.push({\n          pathname: currentPathname,\n          name: routeName,\n          active: index + 1 === array.length ? true : false,\n        })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2\">\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        )\n      })}\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n          <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst AppFooter = () => {\n  return (\n    <CFooter>\n      <div>\n        <span className=\"ms-1\">&copy; 2022</span>\n      </div>\n      <div className=\"ms-auto\">\n        <span className=\"me-1\">Powered by Inc ltd</span>\n\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","import React from 'react'\nimport {\n  CAvatar,\n  CBadge,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from '@coreui/react'\nimport {\n  cilBell,\n  cilCreditCard,\n  cilCommentSquare,\n  cilEnvelopeOpen,\n  cilFile,\n  cilLockLocked,\n  cilSettings,\n  cilTask,\n  cilUser,\n} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\n\nimport { useNavigate } from 'react-router-dom'\n\nimport avatar8 from './../../assets/images/profile-icon.png'\n\nconst AppHeaderDropdown = () => {\n\n\n  const navigate = useNavigate()\n\n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n        <CAvatar src={avatar8} size=\"md\" />\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownHeader className=\"bg-light fw-semibold py-2\">Account</CDropdownHeader>\n        {/* <CDropdownItem href=\"#\">\n          <CIcon icon={cilBell} className=\"me-2\" />\n          Updates\n          <CBadge color=\"info\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem> */}\n        {/* <CDropdownItem href=\"#\">\n          <CIcon icon={cilEnvelopeOpen} className=\"me-2\" />\n          Messages\n          <CBadge color=\"success\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem> */}\n        {/* <CDropdownItem href=\"#\">\n          <CIcon icon={cilTask} className=\"me-2\" />\n          Tasks\n          <CBadge color=\"danger\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem> */}\n        {/* <CDropdownItem href=\"#\">\n          <CIcon icon={cilCommentSquare} className=\"me-2\" />\n          Comments\n          <CBadge color=\"warning\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem> */}\n        {/* <CDropdownHeader className=\"bg-light fw-semibold py-2\">Settings</CDropdownHeader> */}\n        {/* <CDropdownItem href=\"#\">\n          <CIcon icon={cilUser} className=\"me-2\" />\n          Profile\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilSettings} className=\"me-2\" />\n          Settings\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilCreditCard} className=\"me-2\" />\n          Payments\n          <CBadge color=\"secondary\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>*/}\n        <CDropdownItem onClick={()=>navigate('/my-account')} style={{ cursor: 'pointer'}}>\n          <CIcon icon={cilSettings} className=\"me-2\" />\n          My Account\n        </CDropdownItem> \n        <CDropdownDivider />\n        <CDropdownItem\n        style={{ cursor: 'pointer'}}\n         onClick={()=>{\n          localStorage.clear(),\n          navigate('/')\n        }}\n        >\n          <CIcon icon={cilLockLocked} className=\"me-2\" />\n          Logout\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n}\n\nexport default AppHeaderDropdown\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilBell, cilEnvelopeOpen, cilList, cilMenu } from '@coreui/icons'\n\nimport { AppBreadcrumb } from './index'\nimport { AppHeaderDropdown } from './header/index'\nimport { logo } from 'src/assets/brand/logo'\n\nconst AppHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n\n\n        <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>\n      <CHeaderDivider />\n      <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilChartPie,\n  cilSpeedometer,\n} from '@coreui/icons'\nimport {  CNavItem, CNavTitle } from '@coreui/react'\n\nconst _nav = [\n\n  {\n    component: CNavTitle,\n    name: '',\n  },\n\n  \n  {\n    component: CNavItem,\n    name: 'Dashboard',\n    to: '/dashboard',\n    icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n  },\n\n  {\n    component: CNavTitle,\n    name: '',\n  },\n\n  {\n    component: CNavItem,\n    name: 'Regulations',\n    to: '/regulations',\n    icon: <CIcon icon={cilChartPie} customClassName=\"nav-icon\" />,\n  },\n]\n\nexport default _nav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport { logoNegative } from 'src/assets/brand/logo-negative'\nimport { sygnet } from 'src/assets/brand/sygnet'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\n// sidebar nav config\nimport navigation from '../_nav'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      {/* <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\">\n        <CIcon className=\"sidebar-brand-full\" icon={logoNegative} height={35} />\n        <CIcon className=\"sidebar-brand-narrow\" icon={sygnet} height={35} />\n      </CSidebarBrand> */}\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n      <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n      />\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = () => {\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent />\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n"],"names":["path","name","element","React","AppBreadcrumb","currentLocation","useLocation","pathname","breadcrumbs","location","split","reduce","prev","curr","index","array","currentPathname","routeName","routes","currentRoute","find","route","getRouteName","push","active","length","getBreadcrumbs","className","map","breadcrumb","href","key","AppContent","lg","Suspense","fallback","color","idx","exact","to","replace","AppFooter","navigate","useNavigate","variant","placement","caret","src","size","onClick","style","cursor","icon","cilSettings","localStorage","clear","cilLockLocked","dispatch","useDispatch","sidebarShow","useSelector","state","position","fluid","type","cilMenu","AppSidebarNav","items","navLink","badge","text","navItem","item","component","rest","Component","NavLink","navGroup","String","toggler","visible","startsWith","CNavTitle","CNavItem","cilSpeedometer","customClassName","cilChartPie","AppSidebar","unfoldable","sidebarUnfoldable","onVisibleChange","navigation"],"sourceRoot":""}