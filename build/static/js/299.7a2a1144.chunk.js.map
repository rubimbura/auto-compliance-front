{"version":3,"file":"static/js/299.7a2a1144.chunk.js","mappings":"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","sources":["layout/routes.js","components/AppBreadcrumb.js","layout/AppContent.js","components/AppFooter.js","components/header/AppHeaderDropdown.js","components/AppHeader.js","components/AppSidebarNav.js","layout/_userNav.js","layout/_nav.js","components/AppSidebar.js","layout/DefaultLayout.js"],"sourcesContent":["import React from 'react'\n\n\nconst Dashboard = React.lazy(() => import('../views/dashboard/Dashboard'))\nconst Regulations = React.lazy(()=>import('../views/regulations'))\nconst AddRegulationForm = React.lazy(()=>import('../views/regulations/AddRegulationForm'))\nconst ViewRegulationForm = React.lazy(() => import('../views/regulations/ViewRegulation'))\nconst ViewRegulationArticle = React.lazy(() => import('../views/regulations/ViewRegulationArticle'))\nconst Users = React.lazy(() => import('../views/users'))\n\n// user regulations\nconst UserRegulation = React.lazy(() => import('../views/regulations/user/UserRegulation'))\nconst AssesUserRegulation = React.lazy(() => import('../views/regulations/user/UserAssessRegulation'))\n\nconst routes = [\n  { path: '/dashboard', name: 'Dashboard', element: Dashboard },\n  { path: '/regulations', name: 'Regulations', element: Regulations},\n  { path: '/regulations/new-regulation', name: 'Add new regulation form', element: AddRegulationForm},\n  { path: '/regulations/view-regulation', name: 'Regulation Form', element: ViewRegulationForm},\n  { path: '/regulations/view-regulation/article', name: 'Article', element: ViewRegulationArticle},\n  { path: '/user/regulations', name: 'Regulation', element: UserRegulation},\n  { path: '/user/regulations/assesment', name: 'Regulation', element: AssesUserRegulation},\n  { path: '/users', name: 'Users', element: Users}\n]\n\nexport default routes\n","import React from 'react'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\n\nimport routes from '../layout/routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n  const navigate = useNavigate()\n  const state = useSelector(state => state.regulation.value)\n\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute ? currentRoute.name : false\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      const routeName = getRouteName(currentPathname, routes)\n      routeName &&\n        breadcrumbs.push({\n          pathname: currentPathname,\n          name: routeName,\n          active: index + 1 === array.length ? true : false,\n        })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  const handleClick = (e, path) => {\n    e.preventDefault() \n    navigate(`${path}`, {state: {details: state}}) \n  }\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2\">\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active ? { active: true } :{ href: '#'})}\n            key={index}\n            onClick={(event)=> handleClick(event, breadcrumb.pathname)}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        )\n      })}\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from './routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n          <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst AppFooter = () => {\n  return (\n    <CFooter>\n      <div>\n        <span className=\"ms-1\">&copy; 2022</span>\n      </div>\n      <div className=\"ms-auto\">\n        <span className=\"me-1\">Powered by Inc ltd</span>\n\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","import React from 'react'\nimport {\n  CAvatar,\n  CBadge,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from '@coreui/react'\nimport {\n  cilBell,\n  cilCreditCard,\n  cilCommentSquare,\n  cilEnvelopeOpen,\n  cilFile,\n  cilLockLocked,\n  cilSettings,\n  cilTask,\n  cilUser,\n} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\n\nimport { useNavigate } from 'react-router-dom'\n\nimport avatar8 from './../../assets/images/profile-icon.png'\n\nconst AppHeaderDropdown = () => {\n\n\n  const navigate = useNavigate()\n\n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n        <CAvatar src={avatar8} size=\"md\" />\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownHeader className=\"bg-light fw-semibold py-2\">Account</CDropdownHeader>\n        {/* <CDropdownItem href=\"#\">\n          <CIcon icon={cilBell} className=\"me-2\" />\n          Updates\n          <CBadge color=\"info\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem> */}\n        {/* <CDropdownItem href=\"#\">\n          <CIcon icon={cilEnvelopeOpen} className=\"me-2\" />\n          Messages\n          <CBadge color=\"success\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem> */}\n        {/* <CDropdownItem href=\"#\">\n          <CIcon icon={cilTask} className=\"me-2\" />\n          Tasks\n          <CBadge color=\"danger\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem> */}\n        {/* <CDropdownItem href=\"#\">\n          <CIcon icon={cilCommentSquare} className=\"me-2\" />\n          Comments\n          <CBadge color=\"warning\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem> */}\n        {/* <CDropdownHeader className=\"bg-light fw-semibold py-2\">Settings</CDropdownHeader> */}\n        {/* <CDropdownItem href=\"#\">\n          <CIcon icon={cilUser} className=\"me-2\" />\n          Profile\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilSettings} className=\"me-2\" />\n          Settings\n        </CDropdownItem>\n        <CDropdownItem href=\"#\">\n          <CIcon icon={cilCreditCard} className=\"me-2\" />\n          Payments\n          <CBadge color=\"secondary\" className=\"ms-2\">\n            42\n          </CBadge>\n        </CDropdownItem>*/}\n        <CDropdownItem onClick={()=>navigate('/my-account')} style={{ cursor: 'pointer'}}>\n          <CIcon icon={cilSettings} className=\"me-2\" />\n          My Account\n        </CDropdownItem> \n        <CDropdownDivider />\n        <CDropdownItem\n        style={{ cursor: 'pointer'}}\n         onClick={()=>{\n          sessionStorage.clear(),\n          navigate('/')\n        }}\n        >\n          <CIcon icon={cilLockLocked} className=\"me-2\" />\n          Logout\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n}\n\nexport default AppHeaderDropdown\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilBell, cilEnvelopeOpen, cilList, cilMenu } from '@coreui/icons'\n\nimport { AppBreadcrumb } from './index'\nimport { AppHeaderDropdown } from './header/index'\nimport { logo } from 'src/assets/brand/logo'\n\nconst AppHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n\n\n        <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>\n      <CHeaderDivider />\n      <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilChartPie,\n  cilSpeedometer,\n} from '@coreui/icons'\nimport {  CNavItem, CNavTitle } from '@coreui/react'\n\nconst _nav = [\n  {\n    component: CNavTitle,\n    name: '',\n  },\n  {\n    component: CNavItem,\n    name: 'Dashboard',\n    to: '/dashboard',\n    icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n  },\n\n  {\n    component: CNavTitle,\n    name: '',\n  },\n\n  {\n    component: CNavItem,\n    name: 'Regulation',\n    to: '/user/regulations',\n    icon: <CIcon icon={cilChartPie} customClassName=\"nav-icon\" />,\n  },\n]\n\nexport default _nav\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilChartPie,\n  cilSpeedometer,\n} from '@coreui/icons'\nimport {  CNavItem, CNavTitle } from '@coreui/react'\n\nconst _nav = [\n  {\n    component: CNavTitle,\n    name: '',\n  },\n  {\n    component: CNavItem,\n    name: 'Dashboard',\n    to: '/dashboard',\n    icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n  },\n\n  {\n    component: CNavTitle,\n    name: '',\n  },\n  {\n    component: CNavItem,\n    name: 'Regulations',\n    to: '/regulations',\n    icon: <CIcon icon={cilChartPie} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Users',\n    to: '/users',\n    icon: <CIcon icon={cilChartPie} customClassName=\"nav-icon\" />,\n  },\n]\n\nexport default _nav\n","import React, { useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler } from '@coreui/react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\n// sidebar nav config\nimport navigation from '../layout/_nav'\nimport userNaviagtion from '../layout/_userNav'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  const token = sessionStorage.getItem('token') \n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={true ? userNaviagtion : navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n      <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n      />\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = () => {\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent />\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n"],"names":["Dashboard","React","Regulations","AddRegulationForm","ViewRegulationForm","ViewRegulationArticle","Users","path","name","element","AppBreadcrumb","currentLocation","useLocation","pathname","navigate","useNavigate","state","useSelector","regulation","value","breadcrumbs","location","split","reduce","prev","curr","index","array","currentPathname","routeName","routes","currentRoute","find","route","getRouteName","push","active","length","getBreadcrumbs","className","map","breadcrumb","href","key","onClick","event","e","preventDefault","details","AppContent","lg","Suspense","fallback","color","idx","exact","to","replace","AppFooter","variant","placement","caret","src","size","style","cursor","icon","cilSettings","sessionStorage","clear","cilLockLocked","dispatch","useDispatch","sidebarShow","position","fluid","type","cilMenu","AppSidebarNav","items","navLink","badge","text","navItem","item","component","rest","Component","NavLink","navGroup","String","toggler","visible","startsWith","CNavTitle","CNavItem","cilSpeedometer","cilChartPie","customClassName","AppSidebar","unfoldable","sidebarUnfoldable","getItem","onVisibleChange","userNaviagtion"],"sourceRoot":""}